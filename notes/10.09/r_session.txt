R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R version 3.5.1 (2018-07-02) -- Feather Spray
Type 'citation()', 'contributors()', or 'license()' for more information

Libraries:
* /home/nick/.config/R/library
* /usr/lib/R/library

> typeof("hi")
[1] "character"
> typeof(5)
[1] "double"
> typeof(5.1)
[1] "double"
> typeof(1+3i)
[1] "complex"
> typeof(4L)
[1] "integer"
> typeof(mean)
[1] "closure"
> mean("5.1")
Warning in mean.default("5.1") :
  argument is not numeric or logical: returning NA
[1] NA
> mean("a")
Warning in mean.default("a") :
  argument is not numeric or logical: returning NA
[1] NA
> mean(5.1)
[1] 5.1
> # Converting types
> as.numeric("5.1")
[1] 5.1
> # Converting types
> typeof(as.numeric("5.1"))
[1] "double"
> as.numeric("hi")
Warning: NAs introduced by coercion
[1] NA
> typeof(c(5, 3, 2.1))
[1] "double"
> c(5, "hello", 4.1)
[1] "5"     "hello" "4.1"  
> typeof(c(5, "hello", 4.1))
[1] "character"
> c(TRUE, 3)
[1] 1 3
> c(TRUE, 3L)
[1] 1 3
> typeof(c(TRUE, 3L))
[1] "integer"
> c(TRUE, 5.1, "hello")
[1] "TRUE"  "5.1"   "hello"
> typeof(mean)
[1] "closure"
> c(1, TRUE, mean)
[[1]]
[1] 1

[[2]]
[1] TRUE

[[3]]
function (x, ...) 
UseMethod("mean")
<bytecode: 0x559428f90040>
<environment: namespace:base>

> typeof(c(1, TRUE, mean))
[1] "list"
> x = c(1, TRUE, mean)
> typeof(x)
[1] "list"
> dogs = readRDS("data/dogs/dogs_full.rds")
> dim(dogs)
[1] 172  18
> head(dogs)
                   breed    group datadog popularity_all popularity lifetime_cost
1          Border Collie  herding    3.64             45         39         20143
2         Border Terrier  terrier    3.61             80         61         22638
3               Brittany sporting    3.54             30         30         22589
4          Cairn Terrier  terrier    3.53             59         48         21992
5 Welsh Springer Spaniel sporting    3.34            130         81         20224
6 English Cocker Spaniel sporting    3.33             63         51         18993
  intelligence_rank longevity ailments price food_cost grooming   kids
1                 1     12.52        2   623       324   weekly    low
2                30     14.00        0   833       324   weekly   high
3                19     12.92        0   618       466   weekly medium
4                35     13.84        2   435       324   weekly   high
5                31     12.49        1   750       324   weekly   high
6                18     11.66        0   800       324   weekly   high
  megarank_kids megarank   size weight height
1             1       29 medium     NA     20
2             2        1  small   13.5     NA
3             3       11 medium   35.0     19
4             4        2  small   14.0     10
5             5        4 medium     NA     18
6             6        5 medium   30.0     16
> length(x)
[1] 3
> dim(x)
NULL
> x[1]
[[1]]
[1] 1

> x[2]
[[1]]
[1] TRUE

> typeof(x[2])
[1] "list"
> x = c(1, TRUE, mean, 5.1)
> x[4]
[[1]]
[1] 5.1

> sin(x[4])
Error in sin(x[4]) : non-numeric argument to mathematical function
> typeof(x[4])
[1] "list"
> typeof(x[[4]])
[1] "double"
> x[[4]]
[1] 5.1
> sin(x[[4]])
[1] -0.9258147
> c(1, 2, 3)
[1] 1 2 3
> x = c(1, 2, 3)
> typeof(x)
[1] "double"
> x[1]
[1] 1
> x[[1]]
[1] 1
> # "Subscript out of bounds"
> x
[1] 1 2 3
> x[[10]]
Error in x[[10]] : subscript out of bounds
> x[10]
[1] NA
> dogs[4, 3]
[1] 3.53
> dogs[[4, 3]]
[1] 3.53
> dogs[4, ]
          breed   group datadog popularity_all popularity lifetime_cost
4 Cairn Terrier terrier    3.53             59         48         21992
  intelligence_rank longevity ailments price food_cost grooming kids
4                35     13.84        2   435       324   weekly high
  megarank_kids megarank  size weight height
4             4        2 small     14     10
> dogs[[4, ]]
Error in `[[.data.frame`(dogs, 4, ) : 
  argument "..2" is missing, with no default
> x = list(1, 2, 3)
> x
[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 3

> x = list(1, list("hello", "hi"), 3)
> x
[[1]]
[1] 1

[[2]]
[[2]][[1]]
[1] "hello"

[[2]][[2]]
[1] "hi"


[[3]]
[1] 3

> x[[2]]
[[1]]
[1] "hello"

[[2]]
[1] "hi"

> x[[2]][[1]]
[1] "hello"
> inner = list("hello", "hi")
> x = list(1, inner, 3)
> x
[[1]]
[1] 1

[[2]]
[[2]][[1]]
[1] "hello"

[[2]][[2]]
[1] "hi"


[[3]]
[1] 3

> library(pryr)
> object_size(c(1, 2))
64 B
> object_size(list(1, 2))
176 B
> dogs[[4]][[3]]
[1] 30
> typeof(dogs)
[1] "list"
> dogs[[4]]
  [1]  45  80  30  59 130  63  27  38  60  20  16  62 139   9  12  14 121  57  29
 [20]  35 134   8  39  15 115 114   1  23  17  11  24   5  70 151  77   4  69   3
 [39]  46  86  94  87  26 125 120  90  22  13 129 108  21  73  41  93  65  76  83
 [58]  25 133 160 117  95 140  54  10 124  88  43   2  64  84  47  44  18 102  34
 [77]  51   7  58  68  48  79  40  28  19  49   6  55  33 116 173  72 157 111 112
 [96] 144  74 118 109 128 136 138 168  67  81 106  61  50  36 154 171 146 141 104
[115] 167 137  75 158  71  82 172  31 149 143 147 132 150  78  98 166 148 135 103
[134] 152 119 127  42 110 165  96 170  89 107 169  97 131 145 159  56 156 162 126
[153] 105 142 163  53  85 164 113  52 123  91 161 153 122 101  37  32  99 100  92
[172] 155
> head(dogs)
                   breed    group datadog popularity_all popularity lifetime_cost
1          Border Collie  herding    3.64             45         39         20143
2         Border Terrier  terrier    3.61             80         61         22638
3               Brittany sporting    3.54             30         30         22589
4          Cairn Terrier  terrier    3.53             59         48         21992
5 Welsh Springer Spaniel sporting    3.34            130         81         20224
6 English Cocker Spaniel sporting    3.33             63         51         18993
  intelligence_rank longevity ailments price food_cost grooming   kids
1                 1     12.52        2   623       324   weekly    low
2                30     14.00        0   833       324   weekly   high
3                19     12.92        0   618       466   weekly medium
4                35     13.84        2   435       324   weekly   high
5                31     12.49        1   750       324   weekly   high
6                18     11.66        0   800       324   weekly   high
  megarank_kids megarank   size weight height
1             1       29 medium     NA     20
2             2        1  small   13.5     NA
3             3       11 medium   35.0     19
4             4        2  small   14.0     10
5             5        4 medium     NA     18
6             6        5 medium   30.0     16
> dogs[[4]] == dogs$popularity_all
  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[106] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[136] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[151] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[166] TRUE TRUE TRUE TRUE TRUE TRUE TRUE
> all(dogs[[4]] == dogs$popularity_all)
[1] TRUE
> dogs[[3]]
  [1] 3.64 3.61 3.54 3.53 3.34 3.33 3.30 3.26 3.25 3.22 3.22 3.21 3.20 3.19 3.19
 [16] 3.15 3.11 3.11 3.09 3.08 3.07 3.04 3.03 3.03 3.03 3.02 2.97 2.93 2.93 2.93
 [31] 2.91 2.85 2.84 2.81 2.80 2.80 2.80 2.79 2.78 2.75 2.73 2.72 2.72 2.71 2.71
 [46] 2.70 2.61 2.59 2.59 2.57 2.57 2.57 2.54 2.51 2.49 2.48 2.47 2.45 2.44 2.42
 [61] 2.41 2.38 2.29 2.27 2.24 2.13 2.08 2.07 2.06 2.05 2.04 1.95 1.91 1.90 1.89
 [76] 1.85 1.85 1.83 1.82 1.76 1.66 1.66 1.64 1.57 1.53 1.42 0.99   NA   NA   NA
 [91]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[106]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[136]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[166]   NA   NA   NA   NA   NA   NA   NA
> head(dogs)
                   breed    group datadog popularity_all popularity lifetime_cost
1          Border Collie  herding    3.64             45         39         20143
2         Border Terrier  terrier    3.61             80         61         22638
3               Brittany sporting    3.54             30         30         22589
4          Cairn Terrier  terrier    3.53             59         48         21992
5 Welsh Springer Spaniel sporting    3.34            130         81         20224
6 English Cocker Spaniel sporting    3.33             63         51         18993
  intelligence_rank longevity ailments price food_cost grooming   kids
1                 1     12.52        2   623       324   weekly    low
2                30     14.00        0   833       324   weekly   high
3                19     12.92        0   618       466   weekly medium
4                35     13.84        2   435       324   weekly   high
5                31     12.49        1   750       324   weekly   high
6                18     11.66        0   800       324   weekly   high
  megarank_kids megarank   size weight height
1             1       29 medium     NA     20
2             2        1  small   13.5     NA
3             3       11 medium   35.0     19
4             4        2  small   14.0     10
5             5        4 medium     NA     18
6             6        5 medium   30.0     16
> all(dogs[[3]] == dogs$datadog)
[1] NA
> all.equal(dogs[[3]], dogs$datadog)
[1] TRUE
> typeof(dogs)
[1] "list"
> unclass(dogs)
$breed
  [1] "Border Collie"                      "Border Terrier"                    
  [3] "Brittany"                           "Cairn Terrier"                     
  [5] "Welsh Springer Spaniel"             "English Cocker Spaniel"            
  [7] "Cocker Spaniel"                     "Papillon"                          
  [9] "Australian Cattle Dog"              "Shetland Sheepdog"                 
 [11] "Siberian Husky"                     "Lhasa Apso"                        
 [13] "Affenpinscher"                      "Dachshund"                         
 [15] "Miniature Schnauzer"                "Chihuahua"                         
 [17] "Australian Terrier"                 "Whippet"                           
 [19] "English Springer Spaniel"           "West Highland White Terrier"       
 [21] "Bedlington Terrier"                 "Poodle"                            
 [23] "Bichon Frise"                       "German Shorthaired Pointer"        
 [25] "Pointer"                            "Tibetan Spaniel"                   
 [27] "Labrador Retriever"                 "Maltese"                           
 [29] "Pomeranian"                         "Shih Tzu"                          
 [31] "Australian Shepherd"                "Yorkshire Terrier"                 
 [33] "Irish Setter"                       "Pharaoh Hound"                     
 [35] "Brussels Griffon"                   "Golden Retriever"                  
 [37] "Samoyed"                            "Beagle"                            
 [39] "Chesapeake Bay Retriever"           "Tibetan Terrier"                   
 [41] "Gordon Setter"                      "English Setter"                    
 [43] "Pug"                                "Briard"                            
 [45] "Norfolk Terrier"                    "Flat-Coated Retriever"             
 [47] "Boston Terrier"                     "Doberman Pinscher"                 
 [49] "English Toy Spaniel"                "Belgian Tervuren"                  
 [51] "Cavalier King Charles Spaniel"      "Dalmatian"                         
 [53] "Basset Hound"                       "Basenji"                           
 [55] "Italian Greyhound"                  "Staffordshire Bull Terrier"        
 [57] "Bouvier des Flandres"               "Pembroke Welsh Corgi"              
 [59] "Clumber Spaniel"                    "Dandie Dinmont Terrier"            
 [61] "Saluki"                             "Giant Schnauzer"                   
 [63] "Greyhound"                          "Scottish Terrier"                  
 [65] "Rottweiler"                         "Kerry Blue Terrier"                
 [67] "Afghan Hound"                       "Newfoundland"                      
 [69] "German Shepherd"                    "Pekingese"                         
 [71] "Old English Sheepdog"               "Akita"                             
 [73] "Rhodesian Ridgeback"                "French Bulldog"                    
 [75] "Borzoi"                             "Bernese Mountain Dog"              
 [77] "Bull Terrier"                       "Boxer"                             
 [79] "Alaskan Malamute"                   "Chow Chow"                         
 [81] "Bloodhound"                         "Irish Wolfhound"                   
 [83] "Bullmastiff"                        "Mastiff"                           
 [85] "Great Dane"                         "Saint Bernard"                     
 [87] "Bulldog"                            "Airedale Terrier"                  
 [89] "American English Coonhound"         "American Eskimo Dog"               
 [91] "American Foxhound"                  "American Staffordshire Terrier"    
 [93] "American Water Spaniel"             "Anatolian Shepherd Dog"            
 [95] "Bearded Collie"                     "Beauceron"                         
 [97] "Belgian Malinois"                   "Belgian Sheepdog"                  
 [99] "Black and Tan Coonhound"            "Black Russian Terrier"             
[101] "Bluetick Coonhound"                 "Boykin Spaniel"                    
[103] "Canaan Dog"                         "Cane Corso"                        
[105] "Cardigan Welsh Corgi"               "Cesky Terrier"                     
[107] "Chinese Crested"                    "Chinese Shar Pei"                  
[109] "Collie"                             "Curly Coated Retriever"            
[111] "English Foxhound"                   "Entlebucher Mountain Dog"          
[113] "Field Spaniel"                      "Finnish Lapphund"                  
[115] "Finnish Spitz"                      "German Pinscher"                   
[117] "German Wirehaired Pointer"          "Glen of Imaal Terrier"             
[119] "Great Pyrenees"                     "Greater Swiss Mountain Dog"        
[121] "Harrier"                            "Havanese"                          
[123] "Ibizan Hound"                       "Icelandic Sheepdog"                
[125] "Irish Red and White Setter"         "Irish Terrier"                     
[127] "Irish Water Spaniel"                "Japanese Chin"                     
[129] "Keeshond"                           "Komondor"                          
[131] "Kuvasz"                             "Lakeland Terrier"                  
[133] "Leonberger"                         "Löwchen"                           
[135] "Manchester Terrier"                 "Miniature Bull Terrier"            
[137] "Miniature Pinscher"                 "Neapolitan Mastiff"                
[139] "Norwegian Buhund"                   "Norwegian Elkhound"                
[141] "Norwegian Lundehund"                "Norwich Terrier"                   
[143] "Nova Scotia Duck Tolling Retriever" "Otterhound"                        
[145] "Parson Russell Terrier"             "Petit Basset Griffon Vendeen"      
[147] "Plott"                              "Polish Lowland Sheepdog"           
[149] "Portuguese Water Dog"               "Puli"                              
[151] "Pyrenean Shepherd"                  "Redbone Coonhound"                 
[153] "Schipperke"                         "Scottish Deerhound"                
[155] "Sealyham Terrier"                   "Shiba Inu"                         
[157] "Silky Terrier"                      "Skye Terrier"                      
[159] "Smooth Fox Terrier"                 "Soft-Coated Wheaten Terrier"       
[161] "Spinone Italiano"                   "Standard Schnauzer"                
[163] "Sussex Spaniel"                     "Swedish Vallhund"                  
[165] "Tibetan Mastiff"                    "Toy Fox Terrier"                   
[167] "Vizsla"                             "Weimaraner"                        
[169] "Welsh Terrier"                      "Wire Fox Terrier"                  
[171] "Wirehaired Pointing Griffon"        "Xoloitzcuintli"                    

$group
  [1] herding      terrier      sporting     terrier      sporting    
  [6] sporting     sporting     toy          herding      herding     
 [11] working      non-sporting toy          hound        terrier     
 [16] toy          terrier      hound        sporting     terrier     
 [21] terrier      non-sporting non-sporting sporting     sporting    
 [26] non-sporting sporting     toy          toy          toy         
 [31] herding      toy          sporting     hound        toy         
 [36] sporting     working      hound        sporting     non-sporting
 [41] sporting     sporting     toy          herding      terrier     
 [46] sporting     non-sporting working      toy          herding     
 [51] toy          non-sporting hound        hound        toy         
 [56] terrier      herding      herding      sporting     terrier     
 [61] hound        working      hound        terrier      working     
 [66] terrier      hound        working      herding      toy         
 [71] herding      working      hound        non-sporting hound       
 [76] working      terrier      working      working      non-sporting
 [81] hound        hound        working      working      working     
 [86] working      non-sporting terrier      hound        non-sporting
 [91] hound        terrier      sporting     working      herding     
 [96] herding      herding      herding      hound        working     
[101] hound        sporting     herding      working      herding     
[106] terrier      toy          non-sporting herding      sporting    
[111] hound        herding      sporting     herding      non-sporting
[116] working      sporting     terrier      working      working     
[121] hound        toy          hound        herding      sporting    
[126] terrier      sporting     toy          non-sporting working     
[131] working      terrier      working      non-sporting terrier     
[136] terrier      toy          working      herding      hound       
[141] non-sporting terrier      sporting     hound        terrier     
[146] hound        hound        herding      working      herding     
[151] herding      hound        non-sporting hound        terrier     
[156] non-sporting toy          terrier      terrier      terrier     
[161] sporting     working      sporting     herding      working     
[166] toy          sporting     sporting     terrier      terrier     
[171] sporting     non-sporting
Levels: herding hound non-sporting sporting terrier toy working

$datadog
  [1] 3.64 3.61 3.54 3.53 3.34 3.33 3.30 3.26 3.25 3.22 3.22 3.21 3.20 3.19 3.19
 [16] 3.15 3.11 3.11 3.09 3.08 3.07 3.04 3.03 3.03 3.03 3.02 2.97 2.93 2.93 2.93
 [31] 2.91 2.85 2.84 2.81 2.80 2.80 2.80 2.79 2.78 2.75 2.73 2.72 2.72 2.71 2.71
 [46] 2.70 2.61 2.59 2.59 2.57 2.57 2.57 2.54 2.51 2.49 2.48 2.47 2.45 2.44 2.42
 [61] 2.41 2.38 2.29 2.27 2.24 2.13 2.08 2.07 2.06 2.05 2.04 1.95 1.91 1.90 1.89
 [76] 1.85 1.85 1.83 1.82 1.76 1.66 1.66 1.64 1.57 1.53 1.42 0.99   NA   NA   NA
 [91]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[106]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[136]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[166]   NA   NA   NA   NA   NA   NA   NA

$popularity_all
  [1]  45  80  30  59 130  63  27  38  60  20  16  62 139   9  12  14 121  57  29
 [20]  35 134   8  39  15 115 114   1  23  17  11  24   5  70 151  77   4  69   3
 [39]  46  86  94  87  26 125 120  90  22  13 129 108  21  73  41  93  65  76  83
 [58]  25 133 160 117  95 140  54  10 124  88  43   2  64  84  47  44  18 102  34
 [77]  51   7  58  68  48  79  40  28  19  49   6  55  33 116 173  72 157 111 112
 [96] 144  74 118 109 128 136 138 168  67  81 106  61  50  36 154 171 146 141 104
[115] 167 137  75 158  71  82 172  31 149 143 147 132 150  78  98 166 148 135 103
[134] 152 119 127  42 110 165  96 170  89 107 169  97 131 145 159  56 156 162 126
[153] 105 142 163  53  85 164 113  52 123  91 161 153 122 101  37  32  99 100  92
[172] 155

$popularity
  [1] 39 61 30 48 81 51 27 33 49 20 16 50 84  9 12 14 77 46 29 32 83  8 34 15 74
 [26] 73  1 23 17 11 24  5 56 86 59  4 55  3 40 64 69 65 26 79 76 67 22 13 80 72
 [51] 21 57 36 68 53 58 62 25 82 87 75 70 85 45 10 78 66 37  2 52 63 41 38 18 71
 [76] 31 44  7 47 54 42 60 35 28 19 43  6 NA NA NA NA NA NA NA NA NA NA NA NA NA
[101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[151] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA

$lifetime_cost
  [1] 20143 22638 22589 21992 20224 18993 24330 21001 20395 21006 22049 22031
 [13] 18333 20113 20087 26250 17892 20976 21946 20490 22107 21237 19735 25842
 [25] 24445 25549 21299 19084 15792 21152 21458 20701 20323 21047 19551 21447
 [37] 25352 19468 16697 20336 19605 20312 18527 19673 24308 16000 17741 18397
 [49] 17521 19132 18639 19886 18328 22096 16463 21650 18959 23978 18084 21633
 [61] 24866 26686 15819 17525 18886 17240 24077 19351 17416 20565 22611 20994
 [73] 16530 17266 16176 16099 18490 15746 21986 15898 13824 18435 13936 13581
 [85] 14662 20022 13479    NA    NA    NA    NA    NA    NA    NA    NA    NA
 [97]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA
[109]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA
[121]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA
[133] 15141    NA    NA    NA    NA    NA    NA    NA    NA    NA 12653    NA
[145]    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA
[157]    NA    NA    NA    NA    NA    NA    NA 22839 23747    NA    NA    NA
[169]    NA    NA    NA    NA

$intelligence_rank
  [1]  1 30 19 35 31 18 20  8 10  6 45 68 37 49 12 67 34 51 13 47 40  2 45 17 43
 [26] 46  7 59 23 70 42 27 35 37 59  4 33 73 27 62 34 37 57 30 56 18 54  5 45 14
 [51] 44 39 71 79 60 49 29 11 37 62 43 28 46 65  9 35 80 34  3 74 63 54 52 58 76
 [76] 22 66 48 50 77 75 41 69 72 48 65 78 29 NA NA 46 34 44 NA 34 NA 22 15 44 NA
[101] NA NA NA NA 26 NA 61 51 16 41 46 NA 34 NA 43 NA 44 NA 64 NA NA NA 53 NA NA
[126] 53 24 62 16 NA 42 62 NA NA 32 NA 37 NA NA 36 NA 38 NA 46 NA 62 NA NA NA 27
[151] NA NA 15 47 56 NA 37 55 40 40 NA 18 NA NA NA NA 25 21 53 51 46 NA

$longevity
  [1] 12.52 14.00 12.92 13.84 12.49 11.66 12.50 13.00 11.67 12.53 12.58 13.92
 [13] 11.42 12.63 11.81 16.50 11.05 12.87 12.54 12.80 13.51 11.95 12.21 11.46
 [25] 12.42 14.42 12.04 12.25  9.67 13.20 12.28 12.60 11.63 11.83 12.00 12.04
 [37] 12.44 12.30  9.48 12.31 11.10 11.57 11.00 11.17 13.07  9.02 10.92 10.33
 [49] 10.10 10.60 11.29 11.27 11.43 13.58 10.02 12.05 10.34 12.25 10.00 12.17
 [61] 12.00 10.00  9.36 10.69  9.11  9.40 11.92  9.32  9.73 11.56 11.19 10.16
 [73]  9.10  9.00  9.08  7.56 10.21  8.81 10.67  9.01  6.75  6.94  7.57  6.50
 [85]  6.96  7.78  6.29 11.45 11.50    NA    NA    NA    NA 10.75 12.77    NA
 [97]    NA    NA    NA    NA    NA    NA 14.67    NA 12.70  8.42 10.08    NA
[109]    NA 10.75    NA    NA  9.90  7.33 11.17 11.42 10.00 10.42 10.00  6.80
[121]    NA 10.25    NA    NA 11.57    NA  9.33  9.25 12.17  9.17    NA    NA
[133]  6.98 10.00  9.32  6.60    NA    NA 12.67    NA    NA    NA  6.50 10.80
[145]    NA 12.70    NA 10.80 11.42    NA    NA    NA 13.00  8.70 12.25  7.00
[157] 14.25 11.00 13.17 12.16  9.00    NA 11.17 14.17 11.92    NA 12.50    NA
[169]    NA 13.17  8.80    NA

$ailments
  [1]  2  0  0  2  1  0  2  5  1  5  0  1  0  2  2  1  0  0  4  3  2  2  0  1  1
 [26]  0  3  1  1  1  2  4  2  0  0  4  1  1  1  0  1  2  1  1  0  0  1  4  0  2
 [51]  2  2  2  3  0  1  1  9  0  0  0  1  1  1  3  1  0  2  8  1  1  1  2  0  0
 [76]  4  2  4  2  2  2  3  2  2  4  3  5  1 NA  0 NA  1  0 NA  0 NA  0  4  0  0
[101]  0 NA  0 NA  0 NA NA  4  2  0  0 NA  0 NA  0 NA  1 NA  1  1  0  0  0 NA NA
[126]  0  1  0  1  1  1  0 NA  0  0  0  0  1 NA  1 NA  0  1  1  0  0  0 NA  0  0
[151] NA  0  4  2  1  1  0  0  0  0 NA  1  0 NA NA NA  0  1  0  0  0 NA

$price
  [1]  623  833  618  435  750  800  465  740  530  465  650  350  510  423  715
 [16]  588  640  915  615  538 1058  900  693  545  294 1050  810  650  670  583
 [31]  565 1057  525  913  833  958 1162  288  522 1140  700  615  469  650 2083
 [46]  600  690  790  925 1070 1017  695  490  940  800 1145 1335  587 1033  925
 [61] 1525  810 1175  829 1118 1200  890 1178  820  885  832 1202  995 1900  675
 [76] 1320 1085  700 1210  515  608 1333  980  900 1040  875 2680  733  283  560
 [91]  757 1043  730   NA   NA  967 1080   NA  325 2833  370  531   NA 1070  828
[106]   NA  538  840  650   NA   NA 1167   NA   NA   NA 1500  655   NA  503 1605
[121]   NA  830 1500   NA 1000  588   NA  513  610  656   NA 1093 1480   NA  720
[136] 1740  535 1760   NA  448   NA 1245 1500   NA  528  400   NA   NA   NA  913
[151]   NA  425  658   NA   NA  890  448  550  575  832 1725  855   NA  772 3460
[166]  460  935  562  843  668  755  717

$food_cost
  [1]  324  324  466  324  324  324  674  324  466  405  466  324  324  324  405
 [16]  324  324  324  466  324  324  466  324  971  710  466  466  270  324  324
 [31]  466  324  466  466  324  466  710  324  466  324  466  466  405  466  466
 [46]  466  324  466  405  466  324  466  324  324  324  466  466  674  466  466
 [61]  710 1349  324  324  710  466  710  710  466  466  710  710  466  466  466
 [76]  710  466  466  710  466  710 1217  466  701  710 1217  466   NA   NA   NA
 [91]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[106]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[121]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[136]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[151]   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA
[166]   NA   NA   NA   NA   NA   NA   NA

$grooming
  [1] weekly  weekly  weekly  weekly  weekly  weekly  weekly  weekly  weekly 
 [10] daily   monthly weekly  weekly  weekly  weekly  weekly  weekly  weekly 
 [19] weekly  weekly  weekly  weekly  daily   weekly  weekly  weekly  weekly 
 [28] daily   weekly  daily   weekly  daily   weekly  weekly  weekly  weekly 
 [37] weekly  daily   weekly  weekly  weekly  weekly  weekly  daily   weekly 
 [46] daily   weekly  weekly  weekly  weekly  weekly  weekly  weekly  weekly 
 [55] weekly  weekly  weekly  weekly  weekly  daily   daily   daily   weekly 
 [64] daily   weekly  daily   daily   weekly  weekly  daily   daily   weekly 
 [73] weekly  weekly  daily   weekly  weekly  weekly  daily   daily   weekly 
 [82] weekly  weekly  weekly  weekly  daily   weekly  <NA>    <NA>    <NA>   
 [91] <NA>    <NA>    <NA>    weekly  daily   <NA>    weekly  <NA>    <NA>   
[100] <NA>    <NA>    <NA>    weekly  <NA>    <NA>    weekly  <NA>    <NA>   
[109] <NA>    weekly  <NA>    <NA>    daily   daily   weekly  <NA>    <NA>   
[118] <NA>    <NA>    <NA>    <NA>    <NA>    weekly  <NA>    <NA>    weekly 
[127] weekly  <NA>    <NA>    <NA>    <NA>    weekly  weekly  <NA>    <NA>   
[136] <NA>    <NA>    weekly  <NA>    <NA>    <NA>    weekly  weekly  weekly 
[145] weekly  <NA>    <NA>    weekly  <NA>    <NA>    <NA>    <NA>    <NA>   
[154] <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    <NA>   
[163] weekly  weekly  weekly  <NA>    <NA>    weekly  weekly  <NA>    <NA>   
[172] <NA>   
Levels: daily weekly monthly

$kids
  [1] low    high   medium high   high   high   high   medium low    high   high  
 [12] high   medium low    medium low    medium medium high   high   medium medium
 [23] high   high   high   high   high   low    medium high   medium low    high  
 [34] medium low    high   high   high   high   medium high   high   high   high  
 [45] medium high   high   medium medium high   high   high   high   medium low   
 [56] high   high   high   high   high   high   medium high   medium medium medium
 [67] high   high   medium medium high   low    medium high   medium high   medium
 [78] high   medium medium medium high   high   high   high   high   medium <NA>  
 [89] <NA>   <NA>   <NA>   <NA>   <NA>   medium high   <NA>   high   <NA>   <NA>  
[100] <NA>   <NA>   <NA>   high   <NA>   <NA>   high   <NA>   <NA>   <NA>   medium
[111] <NA>   <NA>   medium high   high   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>  
[122] <NA>   high   <NA>   <NA>   high   high   <NA>   <NA>   <NA>   <NA>   high  
[133] high   <NA>   <NA>   <NA>   <NA>   high   <NA>   <NA>   <NA>   medium high  
[144] high   medium <NA>   <NA>   medium <NA>   <NA>   <NA>   <NA>   <NA>   <NA>  
[155] <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   low    high   high  
[166] <NA>   <NA>   high   high   <NA>   <NA>   <NA>  
Levels: high medium low

$megarank_kids
  [1]  1  2  3  4  5  6  7  8  9 11 10 12 13 14 14 16 17 17 19 20 21 22 25 23 24
 [26] 26 27 29 28 29 31 32 33 34 36 37 35 38 39 40 41 43 42 44 45 46 47 49 48 52
 [51] 50 50 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
 [76] 76 77 78 79 80 81 82 83 84 85 86 87 NA NA NA NA NA NA NA NA NA NA NA NA NA
[101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[151] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA

$megarank
  [1] 29  1 11  2  4  5  6 22 52  8  3  7 26 54 27 55 30 30  9 10 35 39 16 12 13
 [26] 14 15 65 45 19 46 69 17 47 66 20 18 28 21 51 23 25 24 33 53 34 32 57 56 38
 [51] 35 35 39 59 77 41 42 43 44 49 50 67 48 71 68 76 60 58 74 78 61 86 79 62 82
 [76] 63 80 64 83 85 84 70 72 73 75 81 87 NA NA NA NA NA NA NA NA NA NA NA NA NA
[101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA
[151] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA

$size
  [1] medium small  medium small  medium medium small  small  medium small  medium
 [12] small  small  small  small  small  small  medium medium small  small  medium
 [23] small  large  large  small  medium small  small  small  medium small  large 
 [34] medium small  medium medium small  large  small  large  large  medium large 
 [45] small  medium medium large  small  large  small  medium small  medium small 
 [56] medium large  small  medium small  medium large  large  small  large  medium
 [67] large  large  large  small  medium large  large  medium large  large  medium
 [78] medium large  medium large  large  large  large  large  large  medium medium
 [89] large  small  medium medium medium large  medium large  large  large  large 
[100] large  large  medium medium large  small  small  small  medium large  large 
[111] large  medium medium medium medium medium large  small  large  large  medium
[122] small  large  medium large  medium medium small  medium large  large  small 
[133] large  small  small  small  small  large  medium medium small  small  medium
[144] large  small  small  medium medium medium medium medium large  small  large 
[155] small  small  small  small  small  medium large  medium small  small  large 
[166] small  medium large  small  small  medium medium
Levels: large medium small

$weight
  [1]    NA  13.5  35.0  14.0    NA  30.0  25.0    NA    NA  22.0  47.5  15.0
 [13]    NA  24.0  15.5   5.5    NA    NA  45.0    NA  20.0    NA    NA  62.5
 [25]  59.5  12.0  67.5   5.0   5.0  12.5    NA   5.5  65.0    NA   9.0  60.0
 [37]    NA    NA  67.5  24.0  62.5    NA  16.0    NA  12.0    NA    NA    NA
 [49]  11.0    NA  15.5    NA    NA  23.0    NA  31.0    NA  26.0  70.0  21.0
 [61]    NA  77.5  65.0  20.0    NA  36.5  55.0 125.0    NA  13.0    NA    NA
 [73]  77.5  27.0  82.5    NA  60.0    NA  80.0    NA  85.0    NA 115.0 175.0
 [85]    NA 155.0  45.0    NA    NA    NA    NA    NA  35.0 115.0    NA    NA
 [97]    NA    NA    NA    NA  62.5    NA  45.0    NA  31.5  19.0    NA  52.5
[109]  62.5    NA    NA    NA    NA    NA    NA    NA    NA  35.0    NA    NA
[121]    NA    NA    NA    NA    NA  26.0  55.0    NA    NA 100.0  92.5  17.0
[133]    NA    NA  17.0    NA    NA 130.0  33.0  51.5    NA  12.0    NA  97.5
[145]  15.0    NA  50.0    NA  47.5    NA    NA    NA    NA  92.5  24.0  20.0
[157]  10.0  40.0  17.5  35.0    NA    NA  40.0    NA    NA    NA    NA    NA
[169]  20.0  17.5    NA    NA

$height
  [1] 20.00    NA 19.00 10.00 18.00 16.00 14.50  9.50 18.50 14.50 21.75 10.50
 [13] 10.25    NA 13.00  5.00 10.50 20.00 19.50 10.50    NA 16.00 10.50 24.00
 [25] 25.50 10.00 23.00  9.00    NA  9.75 20.50    NA 26.00 23.00    NA 22.75
 [37] 21.25 14.00 23.50 15.50 25.00 24.50 16.00 24.50  9.50 23.25    NA 26.00
 [49] 10.00 24.00 12.50 21.00 14.00 16.50 14.00 15.00 25.50 11.00 18.50  9.00
 [61] 23.00 25.50    NA 10.00 24.50 18.50 26.00 27.00 24.00    NA 22.00 26.00
 [73] 25.50    NA 28.00 25.25 21.50 23.25 24.00 18.50 25.00 32.00 25.50 30.00
 [85] 30.00 26.50    NA 23.00 24.50 14.00 23.00 18.00 16.50 28.00 21.00 25.75
 [97] 24.00 24.00 25.00 28.00 24.00 16.00 21.50 25.00 11.50 11.50 12.00 19.00
[109] 24.00 25.00 24.00 18.50 17.50 18.50 17.75 18.50 24.00 13.25 28.50 26.00
[121] 20.00  9.75 25.00 17.25 24.25 18.00 22.50  9.50 17.50 27.50 28.00 14.50
[133] 28.50 13.00    NA 12.00 11.25 27.50 17.25 20.00 13.50 10.00 19.00 25.50
[145] 13.50 14.00 22.50 18.50 20.00 16.50 18.00 24.00 11.50    NA 10.50 15.00
[157]  9.50  9.75 15.00 18.00 24.50 18.50 14.00 12.50 25.00 10.00 22.50 25.00
[169] 15.00 15.00 22.00 16.50

attr(,"row.names")
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19
 [20]  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38
 [39]  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57
 [58]  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76
 [77]  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95
 [96]  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
[115] 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133
[134] 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
[153] 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171
[172] 172
> list(x = 1, y = 3)
$x
[1] 1

$y
[1] 3

> class(dogs)
[1] "tbl_df"     "tbl"        "data.frame"
> class(list(1, 2, 3))
[1] "list"
> head(dogs)
                   breed    group datadog popularity_all popularity lifetime_cost
1          Border Collie  herding    3.64             45         39         20143
2         Border Terrier  terrier    3.61             80         61         22638
3               Brittany sporting    3.54             30         30         22589
4          Cairn Terrier  terrier    3.53             59         48         21992
5 Welsh Springer Spaniel sporting    3.34            130         81         20224
6 English Cocker Spaniel sporting    3.33             63         51         18993
  intelligence_rank longevity ailments price food_cost grooming   kids
1                 1     12.52        2   623       324   weekly    low
2                30     14.00        0   833       324   weekly   high
3                19     12.92        0   618       466   weekly medium
4                35     13.84        2   435       324   weekly   high
5                31     12.49        1   750       324   weekly   high
6                18     11.66        0   800       324   weekly   high
  megarank_kids megarank   size weight height
1             1       29 medium     NA     20
2             2        1  small   13.5     NA
3             3       11 medium   35.0     19
4             4        2  small   14.0     10
5             5        4 medium     NA     18
6             6        5 medium   30.0     16
> class(dogs$breed)
[1] "character"
> class(dogs$group)
[1] "factor"
> # S-apply
> sapply(dogs, class)
            breed             group           datadog    popularity_all 
      "character"          "factor"         "numeric"         "integer" 
       popularity     lifetime_cost intelligence_rank         longevity 
        "integer"         "numeric"         "integer"         "numeric" 
         ailments             price         food_cost          grooming 
        "integer"         "numeric"         "numeric"          "factor" 
             kids     megarank_kids          megarank              size 
         "factor"         "integer"         "integer"          "factor" 
           weight            height 
        "numeric"         "numeric" 
> sapply(dogs, mean)
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
            breed             group           datadog    popularity_all 
               NA                NA                NA          87.12209 
       popularity     lifetime_cost intelligence_rank         longevity 
               NA                NA                NA                NA 
         ailments             price         food_cost          grooming 
               NA                NA                NA                NA 
             kids     megarank_kids          megarank              size 
               NA                NA                NA                NA 
           weight            height 
               NA                NA 
> mean(dogs$height)
[1] NA
> mean(dogs$height, na.rm = TRUE)
[1] 19.08962
> sapply(dogs, mean, na.rm = TRUE)
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
Warning in mean.default(X[[i]], ...) :
  argument is not numeric or logical: returning NA
            breed             group           datadog    popularity_all 
               NA                NA          2.603678         87.122093 
       popularity     lifetime_cost intelligence_rank         longevity 
        44.000000      19819.538462         40.924242         10.956741 
         ailments             price         food_cost          grooming 
         1.216216        876.815068        489.597701                NA 
             kids     megarank_kids          megarank              size 
               NA         43.954023         43.942529                NA 
           weight            height 
        44.970930         19.089623 
> head(dogs)
                   breed    group datadog popularity_all popularity lifetime_cost
1          Border Collie  herding    3.64             45         39         20143
2         Border Terrier  terrier    3.61             80         61         22638
3               Brittany sporting    3.54             30         30         22589
4          Cairn Terrier  terrier    3.53             59         48         21992
5 Welsh Springer Spaniel sporting    3.34            130         81         20224
6 English Cocker Spaniel sporting    3.33             63         51         18993
  intelligence_rank longevity ailments price food_cost grooming   kids
1                 1     12.52        2   623       324   weekly    low
2                30     14.00        0   833       324   weekly   high
3                19     12.92        0   618       466   weekly medium
4                35     13.84        2   435       324   weekly   high
5                31     12.49        1   750       324   weekly   high
6                18     11.66        0   800       324   weekly   high
  megarank_kids megarank   size weight height
1             1       29 medium     NA     20
2             2        1  small   13.5     NA
3             3       11 medium   35.0     19
4             4        2  small   14.0     10
5             5        4 medium     NA     18
6             6        5 medium   30.0     16
> # ------------------
> # Univariate Data
> #
> # Break down by statistical data type
> #
> typeof(dogs$group)
[1] "integer"
> class(dogs$group)
[1] "factor"
> table(dogs$group)

     herding        hound non-sporting     sporting      terrier          toy 
          25           26           19           28           28           19 
     working 
          27 
> summary(dogs$group)
     herding        hound non-sporting     sporting      terrier          toy 
          25           26           19           28           28           19 
     working 
          27 
> sort(table(dogs$group))

non-sporting          toy      herding        hound      working     sporting 
          19           19           25           26           27           28 
     terrier 
          28 
> library(ggplot2)
> ggplot(dogs) + geom_bar()
Error: stat_count requires the following missing aesthetics: x
> ggplot(dogs, aes(x = group)) + geom_bar()
> ggplot(dogs, aes(x = group)) + geom_bar()
> ggplot(dogs, aes(x = group)) + geom_point()
Error: geom_point requires the following missing aesthetics: y
> ggplot(dogs, aes(x = group)) + geom_point(stat = "count")
> ggplot(dogs, aes(x = group)) + geom_point(stat = "count") + ylim(0, 30)
> ggplot(dogs, aes(x = group)) + geom_point(stat = "count") +
.   coord_cartesian(ylim = c(0, 30))
> mode("hi")
[1] "character"
> mode(4)
[1] "numeric"
> mode(4L)
[1] "numeric"
> 
